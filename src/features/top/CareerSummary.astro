---
type Props = {
  name: string;
  start: string;
  end?: string;
  summary: string;
  isLast?: boolean;
};

const { name, start, end, summary, isLast = false } = Astro.props;
---

<li class="relative pl-8 pb-12 group">
  {
    !isLast && (
      <div class="absolute left-[11px] top-[28px] w-[2px] h-[calc(100%-16px)] bg-gray-200 dark:bg-gray-700 transition-colors duration-300 ease-in-out" />
    )
  }
  <div
    class="absolute left-0 top-0 w-6 h-6 rounded-full border-2 border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900 group-hover:border-gray-900 dark:group-hover:border-gray-100 group-hover:scale-110 transition-all duration-300 ease-in-out"
  >
    <div
      class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 w-3 h-3 rounded-full bg-gray-200 dark:bg-gray-700 group-hover:bg-gray-900 dark:group-hover:bg-gray-100 transition-all duration-300 ease-in-out"
    >
    </div>
  </div>

  <div
    class="group-hover:-translate-y-1 transition-transform duration-300 ease-in-out"
  >
    <div class="flex flex-col md:flex-row md:items-center gap-2 md:gap-4 mb-3">
      <h3 class="font-medium md:text-base text-sm">{name}</h3>
      <span
        class="text-xs text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-800 px-3 py-1 rounded-full md:ml-auto transition-colors duration-300 ease-in-out"
      >
        {`${start}${end ? ` 〜 ${end}` : " 〜 現在"}`}
      </span>
    </div>

    <div
      class="md:text-sm text-xs text-gray-600 dark:text-gray-300 leading-relaxed"
    >
      <p>{summary}</p>
    </div>
  </div>
</li>
