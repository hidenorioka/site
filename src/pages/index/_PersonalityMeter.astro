---
import type { Tendency } from "./_PersonaliryMeter.type";
import {
  getMeterThemeTailWindProperty,
  getMeterWidthCSSProperty,
  getTendencyLabel,
} from "./_PersonalityMeter.utils";

type Props = {
  heading: string;
  theme: "red" | "blue" | "yellow" | "green" | "fuchsia";
  tendencies: [Tendency, Tendency];
};

const { heading, theme, tendencies } = Astro.props;
const [left, right] = tendencies;
---

<li class="mb-3">
  <p class="md:text-[14px] text-[12px]">{heading}</p>

  <div class="flex flex-col w-full max-w-[500px] pt-2">
    <div class:list={["h-[14px]", getMeterThemeTailWindProperty(right, theme)]}>
      <div
        class:list={[
          "h-[14px] border-r-2 border-r-white",
          getMeterThemeTailWindProperty(left, theme),
        ]}
        style={left.type === "high"
          ? getMeterWidthCSSProperty("left", left)
          : right.type === "high"
            ? getMeterWidthCSSProperty("right", right)
            : null}
      >
      </div>
    </div>

    <div class="flex justify-between mt-1">
      {
        tendencies.map((t) => (
          <span
            class:list={[
              "inline-block md:text-[12px] text-[10px]",
              t.type === "high" && "font-bold",
            ]}
          >
            {getTendencyLabel(t)}
          </span>
        ))
      }
    </div>
  </div>
</li>
