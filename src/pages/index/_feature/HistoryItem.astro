---
type Props = {
  name: string;
  start?: string;
  end?: string;
  summary?: string;
  /** 初期状態でアコーディオン内容を表示するか */
  isOpen?: boolean;
};

const { name, start, end, summary, isOpen = false } = Astro.props;

const hasSummary = !!summary;
---

<li class="md:mb-4 mb-2">
  {
    hasSummary ? (
      <details
        open={isOpen}
        class="hover:bg-gray-100  [&[open]]:bg-gray-100 transition duration-300 rounded-[6px] md:p-4 p-2"
      >
        <summary class="flex items-center appearance-none cursor-pointer">
          <div class="flex items-center gap-4">
            <div class="md:w-[48px] md:h-[48px] w-[32px] h-[32px] rounded-[50%] bg-gray-600 shrink-0" />
            <div>
              <h3 class="md:text-[16px] text-[14px] font-bold">{name}</h3>
              <p class="md:text-[12px] text-[10px]">
                {start}
                {end ? `〜${end}` : "〜現在"}
              </p>
            </div>
          </div>
        </summary>

        <div class="md:mt-4 mt-0 p-4 md:text-[14px] text-[12px]">
          <p>{summary}</p>
        </div>
      </details>
    ) : (
      <div class="md:p-4 p-2">
        <div class="flex items-center gap-4">
          <div class="md:w-[48px] md:h-[48px] w-[32px] h-[32px] rounded-[50%] bg-gray-600 shrink-0" />
          <div>
            <h3 class="md:text-[16px] text-[14px] font-bold">{name}</h3>
            <p class="md:text-[12px] text-[10px]">
              {start}
              {end ? `〜${end}` : "〜現在"}
            </p>
          </div>
        </div>
      </div>
    )
  }
</li>
