---
import { getCollection, type CollectionEntry } from "astro:content";
import AppLayout from "@components/AppLayout.astro";

type PostEntry = CollectionEntry<"post">;

export async function getStaticPaths() {
  const postPosts = await getCollection("post");
  return postPosts.map((post: PostEntry) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post }: { post: PostEntry } = Astro.props;
const { Content } = await post.render();
---

<AppLayout
  title={post.data.title}
  description={post.data.description}
  publishDate={post.data.publishDate}
  tags={post.data.tags}
  type="article"
>
  <main class="container mx-auto px-4 py-8">
    <article class="max-w-4xl mx-auto">
      <header class="mb-8">
        <h1 class="text-4xl font-bold mb-4">{post.data.title}</h1>

        <div
          class="flex flex-wrap gap-4 items-center text-gray-600 dark:text-gray-300 mb-4"
        >
          <time datetime={post.data.publishDate.toISOString()}>
            {new Date(post.data.publishDate).toLocaleDateString("ja-JP")}
          </time>

          {
            post.data.tags && post.data.tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {post.data.tags.map((tag: string) => (
                  <span class="bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200 px-2 py-1 rounded text-sm">
                    {tag}
                  </span>
                ))}
              </div>
            )
          }
        </div>
      </header>

      <div class="prose prose-lg max-w-none">
        <Content />
      </div>
    </article>
  </main>
</AppLayout>
