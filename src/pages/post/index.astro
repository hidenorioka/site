---
import AppLayout from "@components/AppLayout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

type PostEntry = CollectionEntry<"post">;

const postPosts = await getCollection("post");
const sortedPosts = postPosts.sort(
  (a: PostEntry, b: PostEntry) =>
    new Date(b.data.publishDate).getTime() -
    new Date(a.data.publishDate).getTime(),
);
---

<AppLayout title="投稿" description="掲載記事の一覧">
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
      <h1 class="text-4xl font-bold mb-8">投稿</h1>

      <div class="grid gap-8">
        {
          sortedPosts.map((post: PostEntry) => (
            <article class="border-b border-gray-200 dark:border-gray-700 pb-8 last:border-b-0">
              <h2 class="text-2xl font-semibold mb-2">
                <a
                  href={`/post/${post.slug}`}
                  class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 hover:underline"
                >
                  {post.data.title}
                </a>
              </h2>

              <p class="text-gray-600 dark:text-gray-300 mb-2">
                {new Date(post.data.publishDate).toLocaleDateString("ja-JP")}
              </p>

              {post.data.description && (
                <p class="text-gray-700 dark:text-gray-300 mb-4">
                  {post.data.description}
                </p>
              )}

              {post.data.tags && post.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.map((tag: string) => (
                    <span class="bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200 px-2 py-1 rounded text-sm">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
            </article>
          ))
        }
      </div>
    </div>
  </main>
</AppLayout>
